{"version":3,"sources":["assets/Vector.svg","assets/burger.svg","assets/GC_logo.svg","assets/ITN_logo.svg","assets/shid_emozhl_logo.svg","assets/facts-slider/slider-fact1.jpg","assets/facts-slider/slider-fact2.jpg","assets/facts-slider/slider-fact3.jpg","assets/facts-slider/slider-fact4.jpg","assets/facts-slider/slider-fact5.jpg","assets/sectors-slider/sector-slide1.jpg","assets/sectors-slider/sector-slide2.jpg","assets/sectors-slider/sector-slide3.jpg","assets/sectors-slider/sector-slide4.jpg","assets/sectors-slider/sector-slide5.jpg","assets/sectors-slider/sector-slide6.jpg","componets/HeroBlock/HeroBlock.js","componets/SectorsList/SectorItem.js","componets/SectorsList/SectorsList.js","componets/Facts/SlideFacts.js","componets/Facts/Facts.js","componets/Footer/Footer.js","componets/AirQuality/AirQuality.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","logos","useState","isBurgerShowing","setBurgerShowing","logosImages","map","logoItem","i","src","alt","className","key","navItems","link","href","burger","onClick","vect","SectorItem","sector","number","isToolTipShowing","setToolTipShowing","onMouseEnter","onMouseLeave","style","background","imgUrl","backgroundSize","name","description","SectorsList","subtitle","itemsList","item","SlideFacts","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slide","id","spaceBetween","slidesPerView","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","slidesPerGroup","Footer","partners","autor","designer","partnersLogos","logo","navLinks","mapboxgl","accessToken","AirQuality","mapContainer","useRef","lng","lat","zoom","locationInfo","useEffect","Map","container","current","center","ref","App","shidLogo","ITNLogo","gcLogo","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32fa4ae0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vector.1c0e7e35.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger.f867bb0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/GC_logo.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN_logo.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_emozhl_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/slider-fact1.f9f2551a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-fact2.e3f084b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-fact3.ea41cbe3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-fact4.fed42456.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-fact5.5f157730.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sector-slide1.5ec44869.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sector-slide2.65643b05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sector-slide3.f8f67844.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sector-slide4.fb084e1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sector-slide5.43f9dac6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sector-slide6.a8b6caee.jpg\";","import React, {useState} from 'react';\r\nimport './HeroBlock.css';\r\nimport vect from '../../assets/Vector.svg';\r\nimport burger from '../../assets/burger.svg';\r\n\r\nconst HeroBlock = ({title,links,logos}) => {\r\n    const [isBurgerShowing, setBurgerShowing] = useState(false);\r\n    const logosImages = logos.map((logoItem,i) => <img src={logoItem} alt=\"partner-logo\" className=\"hero-partners-item\" key={i}/>);\r\n    const navItems = links.map((link,i) => <a href={link.href} className=\"hero-navigation-item\" key=\"i\">{link.title}</a>);\r\n\t const toggleBurger = () => {\r\n\t \tsetBurgerShowing(\r\n\t \t\t!isBurgerShowing\r\n\t \t)\r\n     }\r\n\r\n        return(\r\n            <section className=\"hero\" >\r\n                <div className=\"container\">\r\n                    <div className=\"hero-partners\">\r\n                        {logosImages}\r\n                        <img src={burger}  onClick={toggleBurger} className={` ${\r\n                            isBurgerShowing\r\n                                ? \"hero-burger-show\"\r\n                                : \"hero-burger\"\r\n                        }`}  alt=\"hero-burger\"  />\r\n                    </div>\r\n                    <nav className=\"hero-navigation\">\r\n                        {navItems}\r\n                    </nav>\r\n                    <h1 className=\"hero-title\">{title}</h1>\r\n                    <a href=\"#\" className=\"hero-link\">Отследить</a>\r\n                    <img src={vect} alt=\"vector\" className=\"hero-vector\" />\r\n                </div>\r\n            </section>\r\n        );\r\n    \r\n};\r\n\r\nexport default HeroBlock;","import React, {useState} from 'react';\r\n\r\nconst SectorItem = ({sector,number}) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false);\r\n//        const toggleToolTip = (newValue) => {\r\n//            setDirectionSwitched(true);\r\n//            setToolTipShowing(newValue);\r\n//        }\r\n\r\n    return(\r\n        <div className=\"sectors-list-item\" onMouseEnter={() => setToolTipShowing(true)} onMouseLeave={() => setToolTipShowing(false)} style={{background: `url(${sector.imgUrl}) center no-repeat`, backgroundSize: 'cover'}}>\r\n        <p className=\"sectors-list-item-name\">\r\n            {sector.name}\r\n        </p>\r\n\t\t{\r\n\t\t\tisToolTipShowing && <p className={`sectors-list-item-tooltip ${\r\n\t\t\t\t(number % 3 === 0)\r\n\t\t\t\t\t? \"sectors-list-item-tooltip-switched\"\r\n\t\t\t\t\t: \"\"\r\n\t\t}`}>\r\n\r\n            {sector.description}\r\n        </p>\r\n        };\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default SectorItem;\r\n","import React from 'react';\r\nimport './SectorsList.css';\r\nimport SectorItem from './SectorItem';\r\n\r\nconst SectorsList = ({title,subtitle,item}) => {\r\n    const itemsList = item.map((sector,i) => <SectorItem sector={sector} number={i+1} key={i}/> )\r\n\r\n    return(\r\n        <section className=\"sectors container\">\r\n            <h2 className=\"sectors-title\">{title}</h2>\r\n            <p className=\"sectors-subtitle\">{subtitle}</p>\r\n            <div className=\"sectors-list\">\r\n\r\n                    {itemsList}\r\n                    \r\n\r\n            </div>\r\n\r\n        </section>\r\n\r\n    );\r\n};\r\nexport default SectorsList;","import React from 'react';\r\n\r\n\r\nconst SlideFacts = ({item}) => {\r\n    return (\r\n        <div className=\"facts-slide\">\r\n            <img src={item.imgUrl} alt=\"slide image\"/>\r\n            <p className=\"facts-slide-desc\">\r\n                {item.desc}\r\n            </p>\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts\";\r\nimport SwiperCore, { Navigation, Pagination } from 'swiper';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport './Facts.css';\r\n\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nconst Facts = ({title, slides}) => {\r\n    const factsSlides = slides.map ((slide) => <SwiperSlide>  <SlideFacts item={slide} key={slide.id} />     </SwiperSlide>);\r\n\r\n    return (\r\n        <section className=\"facts container\">\r\n            <h2 className=\"facts-title\">{title}</h2>\r\n            <div className=\"swiper-button-next\" />\r\n            <Swiper\r\n                spaceBetween={40}\r\n                slidesPerView={3}\r\n                                \r\n                navigation= {{\r\n                    nextEl: '.swiper-button-next',\r\n                    prevEl: '.swiper-button-prev',\r\n                  }}\r\n\r\n                  pagination= {{\r\n                    el: '.facts-pagination',\r\n                    clickable: true,\r\n                    renderBullet: function (index, className) {\r\n                      return `<span class=\"facts-pagination-bullet ${className}\"></span>`;\r\n                    },\r\n                }}\r\n                \r\n                slidesPerGroup={3}>\r\n            \r\n                {factsSlides}\r\n            </Swiper>\r\n            <div className=\"swiper-button-prev\" />\r\n            <div className=\"facts-pagination\" />\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Facts;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = ({partners,links,autor,designer}) => {\r\n    const partnersLogos = partners.map((logo,i) => <img key={i} src={logo} alt={'partner logo'} className=\"footer-partners-item\" />);\r\nconst navLinks = links.map((links,i) => <a href=\"{links.href}\" key={i} className=\"footer-nav-link\">{links.title}</a>)\r\n\r\n    return (\r\n        <section className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer-partners\">\r\n                    {partnersLogos}\r\n                </div>\r\n            \r\n                <div className=\"footer-text-wrap\">\r\n                    <div className=\"footer-nav\">\r\n                        {navLinks}\r\n                    </div>\r\n                    <p className=\"footer-nav-text\">Сайт был разработан <span className=\"text-yellow\">{autor}</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">{designer}</span>.</p>\r\n                </div>\r\n                <p className=\"footer-text\">\r\n                    2020, Все права защищены\r\n                </p>\r\n                <p className=\"footer-text\">\r\n                Согласие на обработку персональных данных<br />\r\n                Политика конфиденциальности     \r\n                </p>\r\n            </div>\r\n        </section>\r\n\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {useEffect, useRef, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './AirQuality.css';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoidmFkaW03NCIsImEiOiJja2ZwNGM3dHYwN2N1MzFtdDc5cWpndWdiIn0.1EetA5WtJFgM60Dt8DAEYA';\r\n\r\nconst AirQuality = () => {\r\n    const mapContainer = useRef(null);\r\n    const [locationInfo] = useState({\r\n        lng: 31,\r\n        lat: 48.3,\r\n        zoom: 5\r\n        });\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [locationInfo.lng, locationInfo.lat],\r\n            zoom: locationInfo.zoom\r\n            });\r\n            },[]);\r\n\r\n    return (\r\n        <section className={'air-q container'}>\r\n            <h2 className=\"air-q-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n\r\n            <div className=\"air-q-map\" ref={mapContainer} />\r\n\r\n            <p className=\"air-q-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AirQuality;","import React from 'react';\nimport './App.css';\nimport HeroBlock from \"./componets/HeroBlock/HeroBlock\";\nimport SectorsList from './componets/SectorsList/SectorsList';\nimport Facts from './componets/Facts/Facts';\nimport Footer from './componets/Footer/Footer';\nimport AirQuality from './componets/AirQuality/AirQuality';\nimport gcLogo from './assets/GC_logo.svg';\nimport ITNLogo from './assets/ITN_logo.svg';\nimport shidLogo from './assets/shid_emozhl_logo.svg';\n\n\n\n\n\nfunction App() {\n  const partners = [\n    shidLogo,\n    ITNLogo,\n    gcLogo\n  ];\n  const navLinks = [\n    {\n      title: \"Основные факты\",\n      href: \"#facts\"\n    },\n    {\n      title: \"Индекс качества воздуха\",\n      href: \"#quality\"\n    },\n    {\n      title: \"Политика по уменьшению загрязнений\",\n      href: \"#politics\"\n    }\n  ];\n  const factsSlides = [\n    {\n      id: '1332',\n      imgUrl: require(\"./assets/facts-slider/slider-fact1.jpg\"),\n      desc: \"Женщины и дети – главные жертвы загрязнения воздуха\"\n    },\n    {\n      id: '1333',\n      imgUrl: require(\"./assets/facts-slider/slider-fact2.jpg\"),\n      desc: \"Защитники окружающей среды подвергаются преследованиям\"\n    },\n    {\n      id: '1334',\n      imgUrl: require(\"./assets/facts-slider/slider-fact3.jpg\"),\n      desc: \"Загрязнение воздуха – нарушение прав человека\"\n    },\n    {\n      id: '1335',\n      imgUrl: require(\"./assets/facts-slider/slider-fact4.jpg\"),\n      desc: \"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха\"\n    },\n    {\n      id: '1336',\n      imgUrl: require(\"./assets/facts-slider/slider-fact5.jpg\"),\n      desc: \"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\n    },\n  ];\n  const sectors = [\n    {\n      name: \"Промышленность\",\n      imgUrl:  require(\"./assets/sectors-slider/sector-slide1.jpg\"),\n      description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\n    },\n    {\n      name: \"Транспорт\",\n      imgUrl:  require(\"./assets/sectors-slider/sector-slide2.jpg\"),\n      description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\n    },\n    {\n      name: \"Городское планирование\",\n      imgUrl:  require(\"./assets/sectors-slider/sector-slide3.jpg\"),\n      description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"\n    },\n    {\n      name: \"Энергия\",\n      imgUrl:  require(\"./assets/sectors-slider/sector-slide4.jpg\"),\n      description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\n    },\n    {\n      name: \"Энергетика\",\n      imgUrl:  require(\"./assets/sectors-slider/sector-slide5.jpg\"),\n      description: \" Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\n    },\n    {\n      name: \"Утилизация отходов\",\n      imgUrl:  require(\"./assets/sectors-slider/sector-slide6.jpg\"),\n      description: \"стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\n    }\n  ];\n  const autor = \"Никитой Ямником\";\n  const designer = \"Валерией Бубырь\";\n\n  return (\n    <>  \n      <HeroBlock title=\"Качество атмосферного воздуха и здоровье\" \n        logos={partners}\n        links={navLinks}/>\n      <Facts title=\"Основные факты\" slides={factsSlides}/>\n      <AirQuality />\n      <SectorsList title=\"Политика по уменьшению загрязнений\" subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\" item={sectors}/>\n      <Footer partners={partners} links={navLinks} autor={autor} designer={designer} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}